# Remove the default prefix and set a new prefix
unbind C-b
set -g prefix C-a

# splits are w/ " for vertical and  % for horizontal

# swapping windows w/ arrows

# preserve path in the new window
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# enable aggressive resize option
set-window-option -g aggressive-resize

# Colours in vim
# problem w/ ctrl-Arrow not working so use xterm instead
set -g default-terminal "xterm-256color"

# Ctrl+left/right key to move within line
set-window-option -g xterm-keys on

# Use vi keys for movement
set-window-option -g mode-keys vi

# Enable mouse support
set -g mouse on

bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Increase history limit
set-option -g history-limit 1048576

# Escape key takes a while to have an effect without this
set -s escape-time 0

# Prevent clicking from jumping to the bottom
unbind -T copy-mode-vi MouseDragEnd1Pane

# open scratch notes
bind-key h split-window -h "vim ~/scratch/notes.md"

# Change the background color to white
# set -g window-active-style bg=white

# # sessionist plugin
# set -g @plugin 'tmux-plugins/tmux-sessionist'
#
# bind a attach-session -c "#{pane_current_path}"
#
# # Ctrl+left/right key to move within line
# set-window-option -g xterm-keys on
#
#
#
# # vi keys for yanking
# bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xsel -i --clipboard'
#

# Use xclip to copy and paste with the system clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clip"
bind C-v run "tmux set-buffer $(xclip -o -sel clip); tmux paste-buffer"

# Enable Tmux Clipboard Integration
set-option -g set-clipboard on
